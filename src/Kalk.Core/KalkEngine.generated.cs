//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Date: 17 May 2020
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kalk.Core
{
    public partial class KalkEngine
    {
        partial void RegisterDocumentation()
        {
            {
                var descriptor = Descriptors["abs"];
                descriptor.Description = @"Returns the absolute value of the specified value.";
                descriptor.IsCommand = false;
                descriptor.Params.Add(new KalkParamDescriptor("x", @"The specified value.")  { IsOptional = false });
                descriptor.Returns = @"The absolute value of the x parameter.";
            }
            {
                var descriptor = Descriptors["ascii"];
                descriptor.Description = @"Returns the ascii table or print";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool1x2"];
                descriptor.Description = @"Creates a 1 (rows) x 2 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool1x3"];
                descriptor.Description = @"Creates a 1 (rows) x 3 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool1x4"];
                descriptor.Description = @"Creates a 1 (rows) x 4 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool2x1"];
                descriptor.Description = @"Creates a 2 (rows) x 1 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool2x2"];
                descriptor.Description = @"Creates a 2 (rows) x 2 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool2x3"];
                descriptor.Description = @"Creates a 2 (rows) x 3 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool2x4"];
                descriptor.Description = @"Creates a 2 (rows) x 4 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool3x1"];
                descriptor.Description = @"Creates a 3 (rows) x 1 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool3x2"];
                descriptor.Description = @"Creates a 3 (rows) x 2 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool3x3"];
                descriptor.Description = @"Creates a 3 (rows) x 3 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool3x4"];
                descriptor.Description = @"Creates a 3 (rows) x 4 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool4x1"];
                descriptor.Description = @"Creates a 4 (rows) x 1 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool4x2"];
                descriptor.Description = @"Creates a 4 (rows) x 2 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool4x3"];
                descriptor.Description = @"Creates a 4 (rows) x 3 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["bool4x4"];
                descriptor.Description = @"Creates a 4 (rows) x 4 (columns) matrix of bool.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["clear"];
                descriptor.Description = @"Clears the screen (by default) or the history (e.g clear history).";
                descriptor.IsCommand = true;
                descriptor.Params.Add(new KalkParamDescriptor("what", @"An optional argument specifying what to clear. Can be of the following value:
    * screen: to clear the screen (default if not passed)
    * history: to clear the history")  { IsOptional = true });
            }
            {
                var descriptor = Descriptors["cls"];
                descriptor.Description = @"Clears the screen.";
                descriptor.IsCommand = true;
            }
            {
                var descriptor = Descriptors["del"];
                descriptor.Description = @"Deletes a user defined variable.";
                descriptor.IsCommand = true;
                descriptor.Params.Add(new KalkParamDescriptor("variable", @"Name of the variable to delete.")  { IsOptional = false });
            }
            {
                var descriptor = Descriptors["double1x2"];
                descriptor.Description = @"Creates a 1 (rows) x 2 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double1x3"];
                descriptor.Description = @"Creates a 1 (rows) x 3 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double1x4"];
                descriptor.Description = @"Creates a 1 (rows) x 4 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double2x1"];
                descriptor.Description = @"Creates a 2 (rows) x 1 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double2x2"];
                descriptor.Description = @"Creates a 2 (rows) x 2 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double2x3"];
                descriptor.Description = @"Creates a 2 (rows) x 3 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double2x4"];
                descriptor.Description = @"Creates a 2 (rows) x 4 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double3x1"];
                descriptor.Description = @"Creates a 3 (rows) x 1 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double3x2"];
                descriptor.Description = @"Creates a 3 (rows) x 2 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double3x3"];
                descriptor.Description = @"Creates a 3 (rows) x 3 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double3x4"];
                descriptor.Description = @"Creates a 3 (rows) x 4 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double4x1"];
                descriptor.Description = @"Creates a 4 (rows) x 1 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double4x2"];
                descriptor.Description = @"Creates a 4 (rows) x 2 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double4x3"];
                descriptor.Description = @"Creates a 4 (rows) x 3 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["double4x4"];
                descriptor.Description = @"Creates a 4 (rows) x 4 (columns) matrix of double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["e"];
                descriptor.Description = @"Defines the natural logarithmic base. e = 2.71828182845905";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["exit"];
                descriptor.Description = @"Exit kalk.";
                descriptor.IsCommand = true;
            }
            {
                var descriptor = Descriptors["float1x2"];
                descriptor.Description = @"Creates a 1 (rows) x 2 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float1x3"];
                descriptor.Description = @"Creates a 1 (rows) x 3 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float1x4"];
                descriptor.Description = @"Creates a 1 (rows) x 4 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float2x1"];
                descriptor.Description = @"Creates a 2 (rows) x 1 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float2x2"];
                descriptor.Description = @"Creates a 2 (rows) x 2 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float2x3"];
                descriptor.Description = @"Creates a 2 (rows) x 3 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float2x4"];
                descriptor.Description = @"Creates a 2 (rows) x 4 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float3x1"];
                descriptor.Description = @"Creates a 3 (rows) x 1 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float3x2"];
                descriptor.Description = @"Creates a 3 (rows) x 2 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float3x3"];
                descriptor.Description = @"Creates a 3 (rows) x 3 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float3x4"];
                descriptor.Description = @"Creates a 3 (rows) x 4 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float4x1"];
                descriptor.Description = @"Creates a 4 (rows) x 1 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float4x2"];
                descriptor.Description = @"Creates a 4 (rows) x 2 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float4x3"];
                descriptor.Description = @"Creates a 4 (rows) x 3 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["float4x4"];
                descriptor.Description = @"Creates a 4 (rows) x 4 (columns) matrix of float.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["help"];
                descriptor.Description = @"";
                descriptor.IsCommand = true;
                descriptor.Params.Add(new KalkParamDescriptor("expression", @"")  { IsOptional = true });
            }
            {
                var descriptor = Descriptors["history"];
                descriptor.Description = @"Displays the command history.";
                descriptor.IsCommand = true;
                descriptor.Params.Add(new KalkParamDescriptor("line", @"An optional parameter that indicates:
    
     - if it is >= 0, the index of the history command to re-run. (e.g `history 1` to re-run the command 1 in the history)
     - if it is < 0, how many recent lines to display. (e.g `history -3` would display the last 3 lines in the history)")  { IsOptional = true });
            }
            {
                var descriptor = Descriptors["inf"];
                descriptor.Description = @"Defines the infinity constant for a double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int1x2"];
                descriptor.Description = @"Creates a 1 (rows) x 2 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int1x3"];
                descriptor.Description = @"Creates a 1 (rows) x 3 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int1x4"];
                descriptor.Description = @"Creates a 1 (rows) x 4 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int2x1"];
                descriptor.Description = @"Creates a 2 (rows) x 1 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int2x2"];
                descriptor.Description = @"Creates a 2 (rows) x 2 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int2x3"];
                descriptor.Description = @"Creates a 2 (rows) x 3 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int2x4"];
                descriptor.Description = @"Creates a 2 (rows) x 4 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int3x1"];
                descriptor.Description = @"Creates a 3 (rows) x 1 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int3x2"];
                descriptor.Description = @"Creates a 3 (rows) x 2 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int3x3"];
                descriptor.Description = @"Creates a 3 (rows) x 3 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int3x4"];
                descriptor.Description = @"Creates a 3 (rows) x 4 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int4x1"];
                descriptor.Description = @"Creates a 4 (rows) x 1 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int4x2"];
                descriptor.Description = @"Creates a 4 (rows) x 2 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int4x3"];
                descriptor.Description = @"Creates a 4 (rows) x 3 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["int4x4"];
                descriptor.Description = @"Creates a 4 (rows) x 4 (columns) matrix of int.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["list"];
                descriptor.Description = @"Lists all user defined variables and functions.";
                descriptor.IsCommand = true;
            }
            {
                var descriptor = Descriptors["nan"];
                descriptor.Description = @"Defines the ""Not a Number"" constant for a double.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["out"];
                descriptor.Description = @"Returns the last evaluated result.";
                descriptor.IsCommand = false;
                descriptor.Returns = @"The last evaluated result as an object.";
            }
            {
                var descriptor = Descriptors["pi"];
                descriptor.Description = @"Defines the PI constant. pi = 3.14159265358979";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["reset"];
                descriptor.Description = @"Clear all defined variables.";
                descriptor.IsCommand = true;
            }
            {
                var descriptor = Descriptors["sign"];
                descriptor.Description = @"Returns an integer that indicates the sign of a number.";
                descriptor.IsCommand = false;
                descriptor.Params.Add(new KalkParamDescriptor("x", @"A signed number.")  { IsOptional = false });
                descriptor.Returns = @"A number that indicates the sign of x:
     - -1 if x is less than zero
     - 0 if x is equal to zero
     - 1 if x is greater than zero.";
            }
            {
                var descriptor = Descriptors["units"];
                descriptor.Description = @"If used in an expression, returns an object containing all units defined.
    Otherwise it will display units in a friendly format.";
                descriptor.IsCommand = false;
            }
            {
                var descriptor = Descriptors["version"];
                descriptor.Description = @"Prints the version of kalk.";
                descriptor.IsCommand = true;
            }
        }        
    }
}
