//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Date: 05/18/2020 06:22:40
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Scriban.Helpers;
using Scriban.Syntax;

namespace Kalk.Core
{
    public partial class KalkEngine
    {
        private const string CategoryMatrixConstructors = "Type Matrix Constructors";

        private static readonly KalkMatrixConstructor<bool> Bool1x2Constructor = new KalkMatrixConstructor<bool>(1, 2);
        private static readonly KalkMatrixConstructor<bool> Bool1x3Constructor = new KalkMatrixConstructor<bool>(1, 3);
        private static readonly KalkMatrixConstructor<bool> Bool1x4Constructor = new KalkMatrixConstructor<bool>(1, 4);
        private static readonly KalkMatrixConstructor<bool> Bool2x1Constructor = new KalkMatrixConstructor<bool>(2, 1);
        private static readonly KalkMatrixConstructor<bool> Bool2x2Constructor = new KalkMatrixConstructor<bool>(2, 2);
        private static readonly KalkMatrixConstructor<bool> Bool2x3Constructor = new KalkMatrixConstructor<bool>(2, 3);
        private static readonly KalkMatrixConstructor<bool> Bool2x4Constructor = new KalkMatrixConstructor<bool>(2, 4);
        private static readonly KalkMatrixConstructor<bool> Bool3x1Constructor = new KalkMatrixConstructor<bool>(3, 1);
        private static readonly KalkMatrixConstructor<bool> Bool3x2Constructor = new KalkMatrixConstructor<bool>(3, 2);
        private static readonly KalkMatrixConstructor<bool> Bool3x3Constructor = new KalkMatrixConstructor<bool>(3, 3);
        private static readonly KalkMatrixConstructor<bool> Bool3x4Constructor = new KalkMatrixConstructor<bool>(3, 4);
        private static readonly KalkMatrixConstructor<bool> Bool4x1Constructor = new KalkMatrixConstructor<bool>(4, 1);
        private static readonly KalkMatrixConstructor<bool> Bool4x2Constructor = new KalkMatrixConstructor<bool>(4, 2);
        private static readonly KalkMatrixConstructor<bool> Bool4x3Constructor = new KalkMatrixConstructor<bool>(4, 3);
        private static readonly KalkMatrixConstructor<bool> Bool4x4Constructor = new KalkMatrixConstructor<bool>(4, 4);
        private static readonly KalkMatrixConstructor<int> Int1x2Constructor = new KalkMatrixConstructor<int>(1, 2);
        private static readonly KalkMatrixConstructor<int> Int1x3Constructor = new KalkMatrixConstructor<int>(1, 3);
        private static readonly KalkMatrixConstructor<int> Int1x4Constructor = new KalkMatrixConstructor<int>(1, 4);
        private static readonly KalkMatrixConstructor<int> Int2x1Constructor = new KalkMatrixConstructor<int>(2, 1);
        private static readonly KalkMatrixConstructor<int> Int2x2Constructor = new KalkMatrixConstructor<int>(2, 2);
        private static readonly KalkMatrixConstructor<int> Int2x3Constructor = new KalkMatrixConstructor<int>(2, 3);
        private static readonly KalkMatrixConstructor<int> Int2x4Constructor = new KalkMatrixConstructor<int>(2, 4);
        private static readonly KalkMatrixConstructor<int> Int3x1Constructor = new KalkMatrixConstructor<int>(3, 1);
        private static readonly KalkMatrixConstructor<int> Int3x2Constructor = new KalkMatrixConstructor<int>(3, 2);
        private static readonly KalkMatrixConstructor<int> Int3x3Constructor = new KalkMatrixConstructor<int>(3, 3);
        private static readonly KalkMatrixConstructor<int> Int3x4Constructor = new KalkMatrixConstructor<int>(3, 4);
        private static readonly KalkMatrixConstructor<int> Int4x1Constructor = new KalkMatrixConstructor<int>(4, 1);
        private static readonly KalkMatrixConstructor<int> Int4x2Constructor = new KalkMatrixConstructor<int>(4, 2);
        private static readonly KalkMatrixConstructor<int> Int4x3Constructor = new KalkMatrixConstructor<int>(4, 3);
        private static readonly KalkMatrixConstructor<int> Int4x4Constructor = new KalkMatrixConstructor<int>(4, 4);
        private static readonly KalkMatrixConstructor<float> Float1x2Constructor = new KalkMatrixConstructor<float>(1, 2);
        private static readonly KalkMatrixConstructor<float> Float1x3Constructor = new KalkMatrixConstructor<float>(1, 3);
        private static readonly KalkMatrixConstructor<float> Float1x4Constructor = new KalkMatrixConstructor<float>(1, 4);
        private static readonly KalkMatrixConstructor<float> Float2x1Constructor = new KalkMatrixConstructor<float>(2, 1);
        private static readonly KalkMatrixConstructor<float> Float2x2Constructor = new KalkMatrixConstructor<float>(2, 2);
        private static readonly KalkMatrixConstructor<float> Float2x3Constructor = new KalkMatrixConstructor<float>(2, 3);
        private static readonly KalkMatrixConstructor<float> Float2x4Constructor = new KalkMatrixConstructor<float>(2, 4);
        private static readonly KalkMatrixConstructor<float> Float3x1Constructor = new KalkMatrixConstructor<float>(3, 1);
        private static readonly KalkMatrixConstructor<float> Float3x2Constructor = new KalkMatrixConstructor<float>(3, 2);
        private static readonly KalkMatrixConstructor<float> Float3x3Constructor = new KalkMatrixConstructor<float>(3, 3);
        private static readonly KalkMatrixConstructor<float> Float3x4Constructor = new KalkMatrixConstructor<float>(3, 4);
        private static readonly KalkMatrixConstructor<float> Float4x1Constructor = new KalkMatrixConstructor<float>(4, 1);
        private static readonly KalkMatrixConstructor<float> Float4x2Constructor = new KalkMatrixConstructor<float>(4, 2);
        private static readonly KalkMatrixConstructor<float> Float4x3Constructor = new KalkMatrixConstructor<float>(4, 3);
        private static readonly KalkMatrixConstructor<float> Float4x4Constructor = new KalkMatrixConstructor<float>(4, 4);
        private static readonly KalkMatrixConstructor<double> Double1x2Constructor = new KalkMatrixConstructor<double>(1, 2);
        private static readonly KalkMatrixConstructor<double> Double1x3Constructor = new KalkMatrixConstructor<double>(1, 3);
        private static readonly KalkMatrixConstructor<double> Double1x4Constructor = new KalkMatrixConstructor<double>(1, 4);
        private static readonly KalkMatrixConstructor<double> Double2x1Constructor = new KalkMatrixConstructor<double>(2, 1);
        private static readonly KalkMatrixConstructor<double> Double2x2Constructor = new KalkMatrixConstructor<double>(2, 2);
        private static readonly KalkMatrixConstructor<double> Double2x3Constructor = new KalkMatrixConstructor<double>(2, 3);
        private static readonly KalkMatrixConstructor<double> Double2x4Constructor = new KalkMatrixConstructor<double>(2, 4);
        private static readonly KalkMatrixConstructor<double> Double3x1Constructor = new KalkMatrixConstructor<double>(3, 1);
        private static readonly KalkMatrixConstructor<double> Double3x2Constructor = new KalkMatrixConstructor<double>(3, 2);
        private static readonly KalkMatrixConstructor<double> Double3x3Constructor = new KalkMatrixConstructor<double>(3, 3);
        private static readonly KalkMatrixConstructor<double> Double3x4Constructor = new KalkMatrixConstructor<double>(3, 4);
        private static readonly KalkMatrixConstructor<double> Double4x1Constructor = new KalkMatrixConstructor<double>(4, 1);
        private static readonly KalkMatrixConstructor<double> Double4x2Constructor = new KalkMatrixConstructor<double>(4, 2);
        private static readonly KalkMatrixConstructor<double> Double4x3Constructor = new KalkMatrixConstructor<double>(4, 3);
        private static readonly KalkMatrixConstructor<double> Double4x4Constructor = new KalkMatrixConstructor<double>(4, 4);

        private void RegisterMatrixTypes()
        {
            RegisterFunction("bool1x2", CreateBool1x2, CategoryMatrixConstructors);
            RegisterFunction("bool1x3", CreateBool1x3, CategoryMatrixConstructors);
            RegisterFunction("bool1x4", CreateBool1x4, CategoryMatrixConstructors);
            RegisterFunction("bool2x1", CreateBool2x1, CategoryMatrixConstructors);
            RegisterFunction("bool2x2", CreateBool2x2, CategoryMatrixConstructors);
            RegisterFunction("bool2x3", CreateBool2x3, CategoryMatrixConstructors);
            RegisterFunction("bool2x4", CreateBool2x4, CategoryMatrixConstructors);
            RegisterFunction("bool3x1", CreateBool3x1, CategoryMatrixConstructors);
            RegisterFunction("bool3x2", CreateBool3x2, CategoryMatrixConstructors);
            RegisterFunction("bool3x3", CreateBool3x3, CategoryMatrixConstructors);
            RegisterFunction("bool3x4", CreateBool3x4, CategoryMatrixConstructors);
            RegisterFunction("bool4x1", CreateBool4x1, CategoryMatrixConstructors);
            RegisterFunction("bool4x2", CreateBool4x2, CategoryMatrixConstructors);
            RegisterFunction("bool4x3", CreateBool4x3, CategoryMatrixConstructors);
            RegisterFunction("bool4x4", CreateBool4x4, CategoryMatrixConstructors);
            RegisterFunction("int1x2", CreateInt1x2, CategoryMatrixConstructors);
            RegisterFunction("int1x3", CreateInt1x3, CategoryMatrixConstructors);
            RegisterFunction("int1x4", CreateInt1x4, CategoryMatrixConstructors);
            RegisterFunction("int2x1", CreateInt2x1, CategoryMatrixConstructors);
            RegisterFunction("int2x2", CreateInt2x2, CategoryMatrixConstructors);
            RegisterFunction("int2x3", CreateInt2x3, CategoryMatrixConstructors);
            RegisterFunction("int2x4", CreateInt2x4, CategoryMatrixConstructors);
            RegisterFunction("int3x1", CreateInt3x1, CategoryMatrixConstructors);
            RegisterFunction("int3x2", CreateInt3x2, CategoryMatrixConstructors);
            RegisterFunction("int3x3", CreateInt3x3, CategoryMatrixConstructors);
            RegisterFunction("int3x4", CreateInt3x4, CategoryMatrixConstructors);
            RegisterFunction("int4x1", CreateInt4x1, CategoryMatrixConstructors);
            RegisterFunction("int4x2", CreateInt4x2, CategoryMatrixConstructors);
            RegisterFunction("int4x3", CreateInt4x3, CategoryMatrixConstructors);
            RegisterFunction("int4x4", CreateInt4x4, CategoryMatrixConstructors);
            RegisterFunction("float1x2", CreateFloat1x2, CategoryMatrixConstructors);
            RegisterFunction("float1x3", CreateFloat1x3, CategoryMatrixConstructors);
            RegisterFunction("float1x4", CreateFloat1x4, CategoryMatrixConstructors);
            RegisterFunction("float2x1", CreateFloat2x1, CategoryMatrixConstructors);
            RegisterFunction("float2x2", CreateFloat2x2, CategoryMatrixConstructors);
            RegisterFunction("float2x3", CreateFloat2x3, CategoryMatrixConstructors);
            RegisterFunction("float2x4", CreateFloat2x4, CategoryMatrixConstructors);
            RegisterFunction("float3x1", CreateFloat3x1, CategoryMatrixConstructors);
            RegisterFunction("float3x2", CreateFloat3x2, CategoryMatrixConstructors);
            RegisterFunction("float3x3", CreateFloat3x3, CategoryMatrixConstructors);
            RegisterFunction("float3x4", CreateFloat3x4, CategoryMatrixConstructors);
            RegisterFunction("float4x1", CreateFloat4x1, CategoryMatrixConstructors);
            RegisterFunction("float4x2", CreateFloat4x2, CategoryMatrixConstructors);
            RegisterFunction("float4x3", CreateFloat4x3, CategoryMatrixConstructors);
            RegisterFunction("float4x4", CreateFloat4x4, CategoryMatrixConstructors);
            RegisterFunction("double1x2", CreateDouble1x2, CategoryMatrixConstructors);
            RegisterFunction("double1x3", CreateDouble1x3, CategoryMatrixConstructors);
            RegisterFunction("double1x4", CreateDouble1x4, CategoryMatrixConstructors);
            RegisterFunction("double2x1", CreateDouble2x1, CategoryMatrixConstructors);
            RegisterFunction("double2x2", CreateDouble2x2, CategoryMatrixConstructors);
            RegisterFunction("double2x3", CreateDouble2x3, CategoryMatrixConstructors);
            RegisterFunction("double2x4", CreateDouble2x4, CategoryMatrixConstructors);
            RegisterFunction("double3x1", CreateDouble3x1, CategoryMatrixConstructors);
            RegisterFunction("double3x2", CreateDouble3x2, CategoryMatrixConstructors);
            RegisterFunction("double3x3", CreateDouble3x3, CategoryMatrixConstructors);
            RegisterFunction("double3x4", CreateDouble3x4, CategoryMatrixConstructors);
            RegisterFunction("double4x1", CreateDouble4x1, CategoryMatrixConstructors);
            RegisterFunction("double4x2", CreateDouble4x2, CategoryMatrixConstructors);
            RegisterFunction("double4x3", CreateDouble4x3, CategoryMatrixConstructors);
            RegisterFunction("double4x4", CreateDouble4x4, CategoryMatrixConstructors);
        }

        /// <summary>Creates a 1 (rows) x 2 (columns) matrix of bool.</summary>
        [KalkDoc("bool1x2")]
        public KalkMatrix<bool> CreateBool1x2(params object[] arguments) => Bool1x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 1 (rows) x 3 (columns) matrix of bool.</summary>
        [KalkDoc("bool1x3")]
        public KalkMatrix<bool> CreateBool1x3(params object[] arguments) => Bool1x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 1 (rows) x 4 (columns) matrix of bool.</summary>
        [KalkDoc("bool1x4")]
        public KalkMatrix<bool> CreateBool1x4(params object[] arguments) => Bool1x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 1 (columns) matrix of bool.</summary>
        [KalkDoc("bool2x1")]
        public KalkMatrix<bool> CreateBool2x1(params object[] arguments) => Bool2x1Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 2 (columns) matrix of bool.</summary>
        [KalkDoc("bool2x2")]
        public KalkMatrix<bool> CreateBool2x2(params object[] arguments) => Bool2x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 3 (columns) matrix of bool.</summary>
        [KalkDoc("bool2x3")]
        public KalkMatrix<bool> CreateBool2x3(params object[] arguments) => Bool2x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 4 (columns) matrix of bool.</summary>
        [KalkDoc("bool2x4")]
        public KalkMatrix<bool> CreateBool2x4(params object[] arguments) => Bool2x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 1 (columns) matrix of bool.</summary>
        [KalkDoc("bool3x1")]
        public KalkMatrix<bool> CreateBool3x1(params object[] arguments) => Bool3x1Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 2 (columns) matrix of bool.</summary>
        [KalkDoc("bool3x2")]
        public KalkMatrix<bool> CreateBool3x2(params object[] arguments) => Bool3x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 3 (columns) matrix of bool.</summary>
        [KalkDoc("bool3x3")]
        public KalkMatrix<bool> CreateBool3x3(params object[] arguments) => Bool3x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 4 (columns) matrix of bool.</summary>
        [KalkDoc("bool3x4")]
        public KalkMatrix<bool> CreateBool3x4(params object[] arguments) => Bool3x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 1 (columns) matrix of bool.</summary>
        [KalkDoc("bool4x1")]
        public KalkMatrix<bool> CreateBool4x1(params object[] arguments) => Bool4x1Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 2 (columns) matrix of bool.</summary>
        [KalkDoc("bool4x2")]
        public KalkMatrix<bool> CreateBool4x2(params object[] arguments) => Bool4x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 3 (columns) matrix of bool.</summary>
        [KalkDoc("bool4x3")]
        public KalkMatrix<bool> CreateBool4x3(params object[] arguments) => Bool4x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 4 (columns) matrix of bool.</summary>
        [KalkDoc("bool4x4")]
        public KalkMatrix<bool> CreateBool4x4(params object[] arguments) => Bool4x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 1 (rows) x 2 (columns) matrix of int.</summary>
        [KalkDoc("int1x2")]
        public KalkMatrix<int> CreateInt1x2(params object[] arguments) => Int1x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 1 (rows) x 3 (columns) matrix of int.</summary>
        [KalkDoc("int1x3")]
        public KalkMatrix<int> CreateInt1x3(params object[] arguments) => Int1x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 1 (rows) x 4 (columns) matrix of int.</summary>
        [KalkDoc("int1x4")]
        public KalkMatrix<int> CreateInt1x4(params object[] arguments) => Int1x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 1 (columns) matrix of int.</summary>
        [KalkDoc("int2x1")]
        public KalkMatrix<int> CreateInt2x1(params object[] arguments) => Int2x1Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 2 (columns) matrix of int.</summary>
        [KalkDoc("int2x2")]
        public KalkMatrix<int> CreateInt2x2(params object[] arguments) => Int2x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 3 (columns) matrix of int.</summary>
        [KalkDoc("int2x3")]
        public KalkMatrix<int> CreateInt2x3(params object[] arguments) => Int2x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 4 (columns) matrix of int.</summary>
        [KalkDoc("int2x4")]
        public KalkMatrix<int> CreateInt2x4(params object[] arguments) => Int2x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 1 (columns) matrix of int.</summary>
        [KalkDoc("int3x1")]
        public KalkMatrix<int> CreateInt3x1(params object[] arguments) => Int3x1Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 2 (columns) matrix of int.</summary>
        [KalkDoc("int3x2")]
        public KalkMatrix<int> CreateInt3x2(params object[] arguments) => Int3x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 3 (columns) matrix of int.</summary>
        [KalkDoc("int3x3")]
        public KalkMatrix<int> CreateInt3x3(params object[] arguments) => Int3x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 4 (columns) matrix of int.</summary>
        [KalkDoc("int3x4")]
        public KalkMatrix<int> CreateInt3x4(params object[] arguments) => Int3x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 1 (columns) matrix of int.</summary>
        [KalkDoc("int4x1")]
        public KalkMatrix<int> CreateInt4x1(params object[] arguments) => Int4x1Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 2 (columns) matrix of int.</summary>
        [KalkDoc("int4x2")]
        public KalkMatrix<int> CreateInt4x2(params object[] arguments) => Int4x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 3 (columns) matrix of int.</summary>
        [KalkDoc("int4x3")]
        public KalkMatrix<int> CreateInt4x3(params object[] arguments) => Int4x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 4 (columns) matrix of int.</summary>
        [KalkDoc("int4x4")]
        public KalkMatrix<int> CreateInt4x4(params object[] arguments) => Int4x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 1 (rows) x 2 (columns) matrix of float.</summary>
        [KalkDoc("float1x2")]
        public KalkMatrix<float> CreateFloat1x2(params object[] arguments) => Float1x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 1 (rows) x 3 (columns) matrix of float.</summary>
        [KalkDoc("float1x3")]
        public KalkMatrix<float> CreateFloat1x3(params object[] arguments) => Float1x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 1 (rows) x 4 (columns) matrix of float.</summary>
        [KalkDoc("float1x4")]
        public KalkMatrix<float> CreateFloat1x4(params object[] arguments) => Float1x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 1 (columns) matrix of float.</summary>
        [KalkDoc("float2x1")]
        public KalkMatrix<float> CreateFloat2x1(params object[] arguments) => Float2x1Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 2 (columns) matrix of float.</summary>
        [KalkDoc("float2x2")]
        public KalkMatrix<float> CreateFloat2x2(params object[] arguments) => Float2x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 3 (columns) matrix of float.</summary>
        [KalkDoc("float2x3")]
        public KalkMatrix<float> CreateFloat2x3(params object[] arguments) => Float2x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 4 (columns) matrix of float.</summary>
        [KalkDoc("float2x4")]
        public KalkMatrix<float> CreateFloat2x4(params object[] arguments) => Float2x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 1 (columns) matrix of float.</summary>
        [KalkDoc("float3x1")]
        public KalkMatrix<float> CreateFloat3x1(params object[] arguments) => Float3x1Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 2 (columns) matrix of float.</summary>
        [KalkDoc("float3x2")]
        public KalkMatrix<float> CreateFloat3x2(params object[] arguments) => Float3x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 3 (columns) matrix of float.</summary>
        [KalkDoc("float3x3")]
        public KalkMatrix<float> CreateFloat3x3(params object[] arguments) => Float3x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 4 (columns) matrix of float.</summary>
        [KalkDoc("float3x4")]
        public KalkMatrix<float> CreateFloat3x4(params object[] arguments) => Float3x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 1 (columns) matrix of float.</summary>
        [KalkDoc("float4x1")]
        public KalkMatrix<float> CreateFloat4x1(params object[] arguments) => Float4x1Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 2 (columns) matrix of float.</summary>
        [KalkDoc("float4x2")]
        public KalkMatrix<float> CreateFloat4x2(params object[] arguments) => Float4x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 3 (columns) matrix of float.</summary>
        [KalkDoc("float4x3")]
        public KalkMatrix<float> CreateFloat4x3(params object[] arguments) => Float4x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 4 (columns) matrix of float.</summary>
        [KalkDoc("float4x4")]
        public KalkMatrix<float> CreateFloat4x4(params object[] arguments) => Float4x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 1 (rows) x 2 (columns) matrix of double.</summary>
        [KalkDoc("double1x2")]
        public KalkMatrix<double> CreateDouble1x2(params object[] arguments) => Double1x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 1 (rows) x 3 (columns) matrix of double.</summary>
        [KalkDoc("double1x3")]
        public KalkMatrix<double> CreateDouble1x3(params object[] arguments) => Double1x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 1 (rows) x 4 (columns) matrix of double.</summary>
        [KalkDoc("double1x4")]
        public KalkMatrix<double> CreateDouble1x4(params object[] arguments) => Double1x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 1 (columns) matrix of double.</summary>
        [KalkDoc("double2x1")]
        public KalkMatrix<double> CreateDouble2x1(params object[] arguments) => Double2x1Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 2 (columns) matrix of double.</summary>
        [KalkDoc("double2x2")]
        public KalkMatrix<double> CreateDouble2x2(params object[] arguments) => Double2x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 3 (columns) matrix of double.</summary>
        [KalkDoc("double2x3")]
        public KalkMatrix<double> CreateDouble2x3(params object[] arguments) => Double2x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 2 (rows) x 4 (columns) matrix of double.</summary>
        [KalkDoc("double2x4")]
        public KalkMatrix<double> CreateDouble2x4(params object[] arguments) => Double2x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 1 (columns) matrix of double.</summary>
        [KalkDoc("double3x1")]
        public KalkMatrix<double> CreateDouble3x1(params object[] arguments) => Double3x1Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 2 (columns) matrix of double.</summary>
        [KalkDoc("double3x2")]
        public KalkMatrix<double> CreateDouble3x2(params object[] arguments) => Double3x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 3 (columns) matrix of double.</summary>
        [KalkDoc("double3x3")]
        public KalkMatrix<double> CreateDouble3x3(params object[] arguments) => Double3x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 3 (rows) x 4 (columns) matrix of double.</summary>
        [KalkDoc("double3x4")]
        public KalkMatrix<double> CreateDouble3x4(params object[] arguments) => Double3x4Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 1 (columns) matrix of double.</summary>
        [KalkDoc("double4x1")]
        public KalkMatrix<double> CreateDouble4x1(params object[] arguments) => Double4x1Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 2 (columns) matrix of double.</summary>
        [KalkDoc("double4x2")]
        public KalkMatrix<double> CreateDouble4x2(params object[] arguments) => Double4x2Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 3 (columns) matrix of double.</summary>
        [KalkDoc("double4x3")]
        public KalkMatrix<double> CreateDouble4x3(params object[] arguments) => Double4x3Constructor.Invoke(this, arguments);
        /// <summary>Creates a 4 (rows) x 4 (columns) matrix of double.</summary>
        [KalkDoc("double4x4")]
        public KalkMatrix<double> CreateDouble4x4(params object[] arguments) => Double4x4Constructor.Invoke(this, arguments);
    }
}
